[{"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\App.tsx":"1","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\reportWebVitals.ts":"2","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\index.tsx":"3","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\GameSession\\GameSession.tsx":"4","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\data\\Decks.tsx":"5","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\data\\Cards.tsx":"6","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\utils\\gameSetUp.ts":"7","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\GameSession\\GameView\\GameView.tsx":"8","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\GameCard\\GameCard.tsx":"9","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\styles\\config\\colors.ts":"10","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\utils\\cardActions.ts":"11","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\DeckCard\\DeckCard.tsx":"12","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\DiscardedCard\\DiscardedCard.tsx":"13","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\CombinedCard\\CombinedCard.tsx":"14","C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\CombinationField\\CombinationField.tsx":"15"},{"size":945,"mtime":1612596661941,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1611733804397,"results":"18","hashOfConfig":"17"},{"size":500,"mtime":1611733804397,"results":"19","hashOfConfig":"17"},{"size":13200,"mtime":1612417244764,"results":"20","hashOfConfig":"17"},{"size":1242,"mtime":1612244768779,"results":"21","hashOfConfig":"17"},{"size":3590,"mtime":1612323648184,"results":"22","hashOfConfig":"17"},{"size":2638,"mtime":1612069949331,"results":"23","hashOfConfig":"17"},{"size":2588,"mtime":1612327148039,"results":"24","hashOfConfig":"17"},{"size":1434,"mtime":1612409728955,"results":"25","hashOfConfig":"17"},{"size":581,"mtime":1612246166257,"results":"26","hashOfConfig":"17"},{"size":792,"mtime":1612169226208,"results":"27","hashOfConfig":"17"},{"size":908,"mtime":1612321486903,"results":"28","hashOfConfig":"17"},{"size":825,"mtime":1612322363672,"results":"29","hashOfConfig":"17"},{"size":961,"mtime":1612326755488,"results":"30","hashOfConfig":"17"},{"size":3809,"mtime":1612411494342,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qj32ek",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\App.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\reportWebVitals.ts",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\index.tsx",[],["64","65"],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\GameSession\\GameSession.tsx",["66","67","68","69"],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\data\\Decks.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\data\\Cards.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\utils\\gameSetUp.ts",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\GameSession\\GameView\\GameView.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\GameCard\\GameCard.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\styles\\config\\colors.ts",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\utils\\cardActions.ts",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\DeckCard\\DeckCard.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\DiscardedCard\\DiscardedCard.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\CombinedCard\\CombinedCard.tsx",[],"C:\\Users\\sebas\\Desktop\\exploding-kittens-www\\src\\components\\CombinationField\\CombinationField.tsx",["70"],"import React,  {useState, useEffect } from 'react';\r\nimport '../../styles/CombinationField.css';\r\nimport CombinedCard from '../CombinedCard/CombinedCard';\r\nimport { useGameContext } from '../GameSession/GameSession';\r\n\r\nfunction CombinationField () {\r\n    const {\r\n        playerHands = {}, \r\n        combinedCards = [],\r\n        discardPile = [],\r\n        randomSteal = () => {}, \r\n        currentPlayer = \"\", \r\n        directedSteal = () => {},\r\n        recoverDiscardedCard = () => {},\r\n    } = useGameContext();\r\n\r\n    const [canStealRandom, setCanStealRandom] = useState<boolean>();\r\n    const [canStealDirect, setCanStealDirect] = useState<boolean>();\r\n    const [canRecoverDiscarded, setCanRecoverDiscarded] = useState<boolean>();\r\n\r\n    const isRandomStealPossible = (): boolean => {\r\n        const combinedCardsQuantity = combinedCards.length;\r\n\r\n        if (combinedCardsQuantity === 2) {\r\n            const playerHand = playerHands[currentPlayer];\r\n            const firstCardId = playerHand[combinedCards[0]].id;\r\n            const combiningCards = combinedCards.map(cardPosition => {return playerHand[cardPosition]});\r\n            const cardsAreAllSame = combiningCards.every(card => { return card.id === firstCardId});\r\n            return cardsAreAllSame;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const isDirectedStealPossible = (): boolean => {\r\n        const combinedCardsQuantity = combinedCards.length;\r\n\r\n        if (combinedCardsQuantity === 3) {\r\n            const playerHand = playerHands[currentPlayer];\r\n            const firstCardId = playerHand[combinedCards[0]].id;\r\n            const combiningCards = combinedCards.map(cardPosition => {return playerHand[cardPosition]});\r\n            const cardsAreAllSame = combiningCards.every(card => { return card.id === firstCardId});\r\n            return cardsAreAllSame;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const isDiscardRecoveryPossible = (): boolean => {\r\n        return combinedCards.length === 5 && discardPile.length > 0;\r\n    };\r\n\r\n    const handleStealRandom = () => {\r\n        const usedCardId = playerHands[currentPlayer][combinedCards[0]].id;\r\n        randomSteal(currentPlayer, 'Anika', 1, usedCardId);\r\n    };\r\n\r\n    const handleStealSpecific = () => {\r\n        const usedCardId = playerHands[currentPlayer][combinedCards[0]].id;\r\n        directedSteal(currentPlayer, 'Anika', 'defuse', usedCardId);\r\n    };\r\n\r\n    const handleDiscardRecover = () => {\r\n        recoverDiscardedCard('skip');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const updatedRandomStealStatus = isRandomStealPossible();\r\n        const updatedDirectedStealStatus = isDirectedStealPossible();\r\n        const updatedDiscardRecoveryStatus = isDiscardRecoveryPossible();\r\n        setCanStealRandom(updatedRandomStealStatus);\r\n        setCanStealDirect(updatedDirectedStealStatus);\r\n        setCanRecoverDiscarded(updatedDiscardRecoveryStatus);\r\n    }, [combinedCards]);\r\n\r\n    return (\r\n        <div className=\"CardCombinator\">\r\n            <h6>Combine Cards Here</h6>\r\n            <div className=\"CardCombinatorArea\" style={{width: '100%', margin: 'auto'}}>\r\n                {combinedCards.map((cardPosition, index) => {\r\n                    const card = playerHands[currentPlayer][cardPosition];\r\n                    return <CombinedCard card={card} cardPosition={index} />\r\n                })}\r\n            </div>\r\n            <div>\r\n                {canStealRandom && <button onClick={handleStealRandom}>Steal Random Card</button>}\r\n                {canStealDirect && <button onClick={handleStealSpecific}>Steal Specific Card</button>}\r\n                {canRecoverDiscarded && <button onClick={handleDiscardRecover}>Recover From Discard Pile</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CombinationField;",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":52,"column":10,"nodeType":"77","messageId":"78","endLine":52,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":53,"column":10,"nodeType":"77","messageId":"78","endLine":53,"endColumn":20},{"ruleId":"75","severity":1,"message":"80","line":53,"column":22,"nodeType":"77","messageId":"78","endLine":53,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":323,"column":6,"nodeType":"83","endLine":323,"endColumn":22,"suggestions":"84"},{"ruleId":"81","severity":1,"message":"85","line":74,"column":8,"nodeType":"83","endLine":74,"endColumn":23,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"@typescript-eslint/no-unused-vars","'gameOver' is assigned a value but never used.","Identifier","unusedVar","'gameWinner' is assigned a value but never used.","'setGameWinner' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'nextPlayer'. Either include it or remove the dependency array.","ArrayExpression",["89"],"React Hook useEffect has missing dependencies: 'isDirectedStealPossible', 'isDiscardRecoveryPossible', and 'isRandomStealPossible'. Either include them or remove the dependency array.",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [nextPlayer, remainingTurns]",{"range":"95","text":"96"},"Update the dependencies array to be: [combinedCards, isDirectedStealPossible, isDiscardRecoveryPossible, isRandomStealPossible]",{"range":"97","text":"98"},[11009,11025],"[nextPlayer, remainingTurns]",[2923,2938],"[combinedCards, isDirectedStealPossible, isDiscardRecoveryPossible, isRandomStealPossible]"]